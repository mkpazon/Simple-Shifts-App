apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.mkpazon.simpleshiftsapp"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // TODO add explanation on why each of these were used

    // Android
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

    // Kotlin
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_core_version"

    // Test
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-common-ktx:$nav_version"

    // Dependency Injection
    implementation "org.kodein.di:kodein-di-generic-jvm:$kodein_version" // for Dependency Injection
    implementation "org.kodein.di:kodein-di-framework-android-core:$kodein_version" // for Dependency Injection
    implementation "org.kodein.di:kodein-di-framework-android-x:$kodein_version" // for Dependency Injection

    // Networking
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version" // HTTP API to interface
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version" // to make moshi work with retrofit by providing converters
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version" // Json parser
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version" // Json parser
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit_coroutines_version" // To all using coroutines Deferred<> in api responses
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version" // to allow parsing HTTP response body to String

    // Debugging
    debugImplementation "com.facebook.stetho:stetho:$stetho_version" // For inspecting network calls visually through a chrome browser with chrome://inspect
    debugImplementation "com.facebook.stetho:stetho-okhttp3:$stetho_version" // For inspecting network calls visually through a chrome browser with chrome://inspect
    implementation "com.jakewharton.timber:timber:$timber_version" // For better logging experience
}
